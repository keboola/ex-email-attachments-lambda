{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Keboola Email attachments extractor - creates IAM Group for deployment with scoped permissions. Assign this group to ci/deploy user.",
  "Parameters": {
    "KeboolaStack": {
      "Type": "String",
      "Description": "IAM Policy and Group for Serverless Deploy",
      "Default": "ex-email-attachments"
    },
    "ServiceName": {
      "Type": "String",
      "Description": "Service name"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "S3 Bucket for emails"
    },
    "DynamoTable": {
      "Type": "String",
      "Description": "Dynamo DB table name"
    },
    "Stage": {
      "Type": "String",
      "Description": "Service stage",
      "AllowedValues": [
        "dev",
        "test",
        "prod"
      ]
    }
  },
  "Conditions": {
    "IsNotProductionStage": { "Fn::Not": [{ "Fn::Equals" : [{ "Ref" : "Stage" }, "prod"] }] }
  },
  "Resources": {
    "ServerlessDeploymentPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-deploy" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceName}-${Stage}/*" },
                { "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceName}-${Stage}-*/*" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:ValidateTemplate"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:s3:::${ServiceName}-${AWS::Region}-deployment" },
                { "Fn::Sub": "arn:aws:s3:::${ServiceName}-${AWS::Region}-deployment/*" },
                { "Fn::Sub": "arn:aws:s3:::${S3Bucket}" },
                { "Fn::Sub": "arn:aws:s3:::${S3Bucket}/*" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:GetRole",
                "iam:PassRole"
              ],
              "Resource": [
                { "Fn::GetAtt": ["ServerlessCloudFormationRole", "Arn"] }
              ]
            },


            {
              "Effect": "Allow",
              "Action": [
                "lambda:*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:lambda:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":function:",
                      {
                        "Ref": "ServiceName"
                      },
                      "-",
                      {
                        "Ref": "Stage"
                      },
                      "-*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "apigateway:*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      "::/restapis"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      "::/restapis/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:CreateRole",
                "iam:DeleteRole",
                "iam:PassRole",
                "iam:DeleteRolePolicy",
                "iam:PutRolePolicy",
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::",
                      { "Ref": "AWS::AccountId" },
                      ":role/",
                      { "Ref": "ServiceName" },
                      "-",
                      { "Ref": "AWS::Region" },
                      "-role"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:UpdateAssumeRolePolicy"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::",
                      { "Ref": "AWS::AccountId" },
                      ":role/",
                      { "Ref": "ServiceName" },
                      { "Ref": "AWS::Region" },
                      "-*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "events:*",
                "logs:*",
                "cloudwatch:*",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "ec2:DescribeAccountAttributes",
                "iam:GetUser",
                "iam:GetRole",
                "iam:AttachRolePolicy",
                "cloudformation:ValidateTemplate",
                "s3:ListAllMyBuckets"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      }
    },
    "ServerlessDeploymentGroup": {
      "Type": "AWS::IAM::Group",
      "Properties": {
        "GroupName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-deploy" },
        "ManagedPolicyArns": [
          { "Ref": "ServerlessDeploymentPolicy" }
        ],
        "Path": "/"
      }
    },
    "TestUserPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Condition" : "IsNotProductionStage",
      "Properties": {
        "ManagedPolicyName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-tests" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoTable}" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": [
                { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }]] },
                { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*"]] }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ServiceName}-${Stage}-*" }
              ]
            }
          ]
        }
      }
    },
    "TestUserGroup": {
      "Type": "AWS::IAM::Group",
      "Condition" : "IsNotProductionStage",
      "Properties": {
        "GroupName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-tests-group" },
        "ManagedPolicyArns": [
          {
            "Ref": "TestUserPolicy"
          }
        ],
        "Path": "/"
      }
    },
    "ServerlessDeploymentS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-deployment" },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "RemovalRule",
              "Status": "Enabled",
              "ExpirationInDays": "30"
            }
          ]
        },
        "Tags": [
          {
            "Key": "KeboolaStack",
            "Value": { "Ref": "KeboolaStack" }
          }
        ]
      }
    },
    "ServerlessCloudFormationPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-sls-cf" },
        "Description": { "Fn::Sub": "${KeboolaStack} - CloudFormation Resources" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:s3:::${ServiceName}-*" },
                { "Fn::Sub": "arn:aws:s3:::${ServiceName}-*/*" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ServiceName}-${Stage}-*" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:GetRole",
                "iam:PassRole"
              ],
              "Resource": [
                { "Fn::GetAtt": ["ServerlessLambdaExecutionRole", "Arn"] }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${ServiceName}-${AWS::Region}-role" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ServiceName}*" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:DescribeLogGroups",
                "s3:ListAllMyBuckets"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "apigateway:*"
              ],
              "Resource": [
                { "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::/restapis" },
                { "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::/restapis/*" }
              ]
            }
          ]
        }
      }
    },
    "ServerlessCloudFormationRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-sls-cf" },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudformation.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          { "Ref": "ServerlessCloudFormationPolicy" }
        ]
      }
    },
    "ServerlessLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-sls-exec" },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [],
        "Policies": [
          {
            "PolicyName": { "Fn::Sub": "${ServiceName}-${AWS::Region}-sls-exec" },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": { "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ServiceName}*" }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoTable}" }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }]] },
                    { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*"]] }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessLambdaExecutionRole": {
      "Value": { "Fn::GetAtt": ["ServerlessLambdaExecutionRole", "Arn"] }
    },
    "ServerlessCloudFormationRole": {
      "Value": { "Fn::GetAtt": ["ServerlessCloudFormationRole", "Arn"] }
    }
  }
}
